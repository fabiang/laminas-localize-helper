name: Continuous Integration

on: [push, pull_request]

jobs:
  psalm:
    name: Psalm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Psalm
        uses: docker://vimeo/psalm-github-actions
        with:
          security_analysis: true
          report_file: results.sarif
          composer_ignore_platform_reqs: true

      - name: Upload Security Analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

      # we may use whatever way to install phpcs, just specify the path on the next step
      # however, curl seems to be the fastest
      - name: Install PHP_CodeSniffer
        run: |
          curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
          php phpcs.phar --version

      - uses: tinovyatkin/action-php-codesniffer@v1
        with:
          files: "**.php" # you may customize glob as needed
          phpcs_path: php phpcs.phar
          standard: phpcs.xml

  unittest:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php_version: ['7.4', '8.0', '8.1', '8.2', '8.3']
        prefer-lowest: ['', '--prefer-lowest']

    name: Unit Tests - PHP ${{ matrix.php_version }} ${{ matrix.prefer-lowest }}

    steps:
    - uses: actions/checkout@v4

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php_version }}

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer update --prefer-dist --no-progress --with-all-dependencies ${{ matrix.prefer-lowest }}

    - name: Run test suite
      run: ./vendor/bin/phpunit --order-by=random

  integrationtest:
    runs-on: ubuntu-latest

    name: Behat

    steps:
    - uses: actions/checkout@v4

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: ./vendor/bin/behat
